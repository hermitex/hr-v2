// app/hooks/useLogin.ts

import { useDispatch } from 'react-redux';
import { setUser } from '../redux/features/userSlice';
import { UserApiResponse, UserInput } from '../types';

// Import the generated useLoginMutation hook from your userAuthApi
import React from 'react';
import { useLoginMutation } from '../redux/services/userAuthApi'; // Adjust the import path as needed

const useLogin = () => {
  const dispatch = useDispatch();

  const [userLoginResponse, setUserLoginResponse] = React.useState<UserApiResponse | null>(null);

  // Use the useLoginMutation hook generated by Redux Toolkit Query
  const [loginMutation] = useLoginMutation();

  const login = async (userInput: UserInput) => {
    console.log(userInput);
    try {
      // Perform the login API call using Redux Toolkit Query mutation
      const user: UserApiResponse = await loginMutation(userInput).unwrap();

      setUserLoginResponse(user);

      console.log(user);
      // Dispatch the user data after successful login
      dispatch(setUser(user));
    } catch (error) {
      // Handle login failure
      console.log(error);
    }
  };

  return { login, userLoginResponse };
};

export default useLogin;
